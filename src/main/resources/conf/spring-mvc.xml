<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-4.2.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-4.2.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd">

	<!-- 添加注解驱动 -->  
    <mvc:annotation-driven> 
		<mvc:message-converters>   
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">   
				<property name="supportedMediaTypes">   
					<list>   
						<value>text/plain;charset=UTF-8</value>   
						<value>text/html;charset=UTF-8</value>   
					</list>   
				</property>   
			</bean>
			<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
				<property name="objectMapper">
					<bean class="com.fasterxml.jackson.databind.ObjectMapper">
						<property name="serializationInclusion" value="ALWAYS"/>
						<property name="dateFormat">
							<bean class="java.text.SimpleDateFormat">
								<constructor-arg type="java.lang.String" value="yyyy-MM-dd HH:mm:ss" />
							</bean>
						</property>
					</bean>
				</property>
			</bean>
		</mvc:message-converters>   
	</mvc:annotation-driven>   
	<!-- 自动扫描controller包下的所有类，如果@Controller注入为bean -->
	<context:component-scan base-package="com.sysongy.*.*.controller" />


	<!-- SpringMVC在超出上传文件限制时，会抛出org.springframework.web.multipart.MaxUploadSizeExceededException -->
	<!-- 该异常是SpringMVC在检查上传的文件信息时抛出来的，而且此时还没有进入到Controller方法中 -->
	 <bean id="exceptionResolver"
		 class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
		   <props>
				<!-- 遇到MaxUploadSizeExceededException异常时，自动跳转到XXX页面 -->
				<prop key="org.springframework.web.multipart.MaxUploadSizeExceededException">/</prop>
			 </props>
		</property>
	 </bean>

	<!-- 避免IE执行AJAX时,返回JSON出现下载文件 -->
	<bean id="mappingJacksonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
	</bean>

	<!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<!-- json转换器 -->
				<ref bean="mappingJacksonHttpMessageConverter" />
			</list>
		</property>
	</bean>

	<!-- 对模型视图名称的解析，即在模型视图名称添加前后缀 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/" />
		<property name="suffix" value=".jsp" />
	</bean>

    <!-- 通过mvc:resources设置静态资源，这样servlet就会处理这些静态资源，而不通过控制器 -->
    <!-- 设置不过滤内容，比如:css,jquery,img 等资源文件 -->
    <mvc:resources mapping="/assets/**"  location="/assets/" /> 
    <mvc:resources mapping="/webpage/**"  location="/webpage/" /> 
    <mvc:resources mapping="/common/**"  location="/common/" />
	<mvc:resources mapping="/docs/**"  location="/docs/" />
    <mvc:resources mapping="/upload/**"  location="/upload/" />
	<mvc:resources mapping="/page/**"  location="/page/" />
    <mvc:resources mapping="/js/**"  location="/js/" />
    <mvc:resources mapping="/dist/**"  location="/dist/" />
    <mvc:resources mapping="/umeditor-dev/**"  location="/umeditor-dev/" />
    
	<!-- 配置多文件上传 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding">
			<value>UTF-8</value>
		</property>
		<property name="maxUploadSize">
			<!-- 上传文件大小限制为31M，31*1024*1024 -->
			<value>524288000</value>
		</property>
		<property name="maxInMemorySize">
			<value>4096</value>
		</property>
	</bean>

	<context:property-placeholder location="classpath:conf/applicationContext-redis.properties" />

	<!-- Jedis 连接池配置-->
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxIdle" value="${redis.pool.maxIdle}" />
		<property name="maxTotal" value="${redis.pool.maxTotal}" />
		<property name="maxWaitMillis" value="${redis.pool.maxWaitMillis}" />
		<property name="testOnBorrow" value="${redis.pool.testOnBorrow}" />
	</bean>
	<!-- Jedis ConnectionFactory 数据库连接配置-->
	<bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<property name="hostName" value="${redis.hostname}" />
		<property name="port" value="${redis.port}" />
		<property name="password" value="${redis.password}" />
		<property name="poolConfig" ref="jedisPoolConfig" />
	</bean>

	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
		<property name="connectionFactory" ref="jedisConnectionFactory" />
		<property name="keySerializer">
			<bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />
		</property>
		<property name="valueSerializer">
			<bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />
		</property>
	</bean>

	<bean id="redisClientImpl"  class="com.sysongy.util.RedisClientImpl">
		<property name="connectionFactory" ref="jedisConnectionFactory" />
		<property name="redisTemplate" ref="redisTemplate" />
	</bean>

	<bean id="javaMailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="smtp.mxhichina.com" />			<!-- 服务器 -->
		<property name="port" value="25" />							<!-- 端口号 -->
		<property name="username" value="rdadmin@sysongy.com" />	<!-- 用户名 -->
		<property name="password" value="12345.com"/>				<!--  密码   -->
		<property name="javaMailProperties">						<!-- SMTP服务器验证 -->
			<props>
				<prop key="mail.smtp.auth">true</prop>				<!-- 验证身份 -->
			</props>
		</property>
	</bean>

	<!-- 设置freeMarker的配置文件路径 -->
	<bean id="freemarkerConfiguration"
		  class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="location" value="classpath:conf/freemarker.properties" />
	</bean>

	<bean id="fmXmlEscape" class="freemarker.template.utility.XmlEscape" />

	<!-- 配置freeMarker的模板路径 -->
	<bean id="freemarkerConfig"
		  class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<property name="templateLoaderPath">
			<value>/WEB-INF/views/</value>
		</property>
		<property name="freemarkerVariables">
			<map>
				<entry key="xml_escape" value-ref="fmXmlEscape" />
			</map>
		</property>
		<property name="freemarkerSettings">
			<props>
				<prop key="template_update_delay">0</prop>
				<prop key="default_encoding">UTF-8</prop>
				<prop key="locale">zh_CN</prop>
			</props>
		</property>
	</bean>

	<!-- 配置freeMarker视图解析器 -->
	<bean id="viewResolver"
		  class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
		<property name="viewClass"
				  value="org.springframework.web.servlet.view.freemarker.FreeMarkerView" />
		<property name="contentType" value="text/html; charset=utf-8" />
		<property name="cache" value="true" />
		<property name="prefix" value="" />
		<property name="suffix" value=".ftl" />
		<property name="exposeSpringMacroHelpers" value="true"></property>
		<property name="exposeRequestAttributes" value="true"></property>
	</bean>

	<bean id="mailEngine" class="com.sysongy.util.mail.MailEngine">
		<property name="mailSender" ref="javaMailSender"/>
		<property name="freeMarkerConfigurer" ref="freemarkerConfig" />
	</bean>

	<bean id="mailMessage" class="org.springframework.mail.SimpleMailMessage">
		<property name="from" value="rdadmin@sysongy.com"/>
	</bean>

	<!--定时任务开始-->
	<bean id="gastationAlertjob" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">  
		<property name="targetObject">  
			<bean class="com.sysongy.util.job.GastationAlertjob" />  
		</property>  
		<property name="targetMethod" value="alertPrepayBalance" />  
		<property name="concurrent" value="false" />  
	</bean>
	
	<bean id="cronTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean"> 
		<property name="jobDetail" ref="gastationAlertjob" />  
		<property name="cronExpression" value="10 33 14 * * ?" />  
	</bean>
	
	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">  
		<property name="triggers">  
			<list>  
				<ref bean="cronTrigger" />  
			</list>  
		</property>  
	</bean>
	<!--定时任务结束-->
</beans>